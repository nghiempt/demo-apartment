# LOCAL DEVELOPMENT (macOS/Windows)
python main.py
streamlit run chat_ui.py --server.port 8501

# ========================================
# DOCKER DEPLOYMENT (Khuy·∫øn ngh·ªã)
# ========================================

## ÔøΩ Ch·∫°y v·ªõi Docker (ƒê∆°n gi·∫£n nh·∫•t)

### 1. Setup Environment
cp .env.example .env
# Ch·ªânh s·ª≠a .env v√† th√™m OPENAI_API_KEY

### 2. Start c·∫£ FE + BE
docker-compose up --build

### 3. Truy c·∫≠p
- Frontend: http://localhost:8501
- Backend: http://localhost:8000
- API Docs: http://localhost:8000/docs

### 4. D·ª´ng
docker-compose down
# ========================================
# UBUNTU DEPLOYMENT (Manual)
# ========================================

## üîë SETUP ENVIRONMENT VARIABLES (B·∫ÆT BU·ªòC)

### T·∫°o file .env t·ª´ template:
cp .env.example .env

### Ch·ªânh s·ª≠a file .env v√† th√™m OpenAI API key:
nano .env
# Thay "your_openai_api_key_here" b·∫±ng API key th·∫≠t c·ªßa b·∫°n

## üöÄ Deployment v·ªõi Docker tr√™n Ubuntu

### C√†i ƒë·∫∑t Docker
sudo apt update
sudo apt install -y docker.io docker-compose
sudo systemctl start docker
sudo systemctl enable docker

### Clone v√† ch·∫°y
git clone <repo-url>
cd apartment-scope-demo
cp .env.example .env
# Ch·ªânh s·ª≠a .env
docker-compose up -d --build

## üõ†Ô∏è Manual Installation (kh√¥ng Docker)

### Setup environment:
sudo apt update && sudo apt upgrade -y
sudo apt install -y python3.11 python3.11-venv python3.11-dev python3-pip
sudo apt install -y libgl1-mesa-glx libglib2.0-0 libsm6 libxext6 libxrender-dev libgomp1
python3.11 -m venv .venv
source .venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt

### Ch·∫°y Backend (FastAPI):
source .venv/bin/activate
python main.py

### Ch·∫°y Frontend (Streamlit) - terminal kh√°c:
source .venv/bin/activate  
streamlit run chat_ui.py --server.port 8501 --server.address 0.0.0.0

## üîß Troubleshooting:
- Ki·ªÉm tra port: sudo ufw allow 8000 && sudo ufw allow 8501
- Ki·ªÉm tra Docker: docker-compose logs
- Restart: docker-compose restart